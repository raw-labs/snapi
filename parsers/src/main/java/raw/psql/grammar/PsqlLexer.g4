lexer grammar PsqlLexer;

// Comments
LINE_COMMENT_START: '--' -> pushMode(INSIDE_SINGLE_LINE_COMMENT);

MULTI_LINE_COMMENT_START: '/*' -> pushMode(INSIDE_MULTI_LINE_COMMENT);

QUOTE: '\'';
DOT: '.';
STAR: '*';
COMMA: ',';
L_SQ_BRACKET: '[';
R_SQ_BRACKET: ']';
L_PAREN: '(';
R_PAREN: ')';
SEMICOLON: ';';

WITH_TIME_ZONE: WITH TIME ZONE;

EQ: '=';
LE: '<';
GT: '>';
LEQ: '<=';
GEQ: '>=';
NEQ1: '<>';
NEQ2: '!=';

PLUS: '+';
MINUS: '-';
DIV: '/';
MOD_OP: '%';
EXP_OP: '^';
SQ_ROOT: '|/';
CUBE_ROOT: '||/';
FACTORIAL: '!';
FACTORIAS: '!!';
BITWISE_AND: '&';
BITWISE_OR: '|';
BITWISE_XOR: '#';
BITWISE_NOT: '~';
BITWISE_SHIFT_LEFT: '<<';
BITWISE_SHIFT_RIGHT: '>>';
CONCAT: '||';
REGEX_CASE_INSENSITIVE_MATCH: '~*';
REGEX_CASE_INSENSITIVE_NOT_MATCH: '!~*';

UNICODE: 'U&';


DOUBLE_COLON: '::';

NO_FLOATING_NUMBER: DIGIT+;
FLOATING_POINT: DIGIT+ '.' DIGIT* EXPONENT?;

PARAM: ':' WORD;

// Strings
DOUBLE_QUOTED_STRING: '"' (~[" \u0000] | '""')* '"'?;
SINGLE_QUOTED_STRING: '\'' (ESC | ~['\\])* '\'';
TICKS_QUOTED_STRING: '`' (ESC | ~[`\\])* '`';

BIGSERIAL: B I G S E R I A L;
SMALLSERIAL: S M A L L S E R I A L;
BOX: B O X;
BYTEA: B Y T E A;
CIDR: C I D R;
CIRCLE: C I R C L E;
INET: I N E T;
JSONB: J S O N B;
LINE: L I N E;
LSEG: L S E G;
MACADDR: M A C A D D R;
MACADDR8: M A C A D D R '8';
MONEY: M O N E Y;
PG_LSN: P G '_' L S N;
PG_SNAPSHOT: P G '_' S N A P S H O T;
POINT: P O I N T;
POLYGON: P O L Y G O N;
TSQUERY: T S Q U E R Y;
TSVECTOR: T S V E C T O R;
TXID_SNAPSHOT: T X I D '_' S N A P S H O T;
UUID: U U I D;
SERIAL: S E R I A L;
CHARACTER_VARYING: CHARACTER VARYING;
BIT_VARYING: BIT VARYING;

// aliases
INT_8: I N T '8';
SERIAL_8: S E R I A L '8';
VARBIT: V A R B I T;
BOOL: B O O L;
CHAR: C H A R;
FLOAT_8: F L O A T '8';
INT_4: I N T '4';
INT: I N T;
DECIMAL: D E C I M A L;
FLOAT_4: F L O A T '4';
INT_2: I N T '2';
SERIAL_2: S E R I A L '2';
SERIAL_4: S E R I A L '4';
TIMESTAMPTZ: T I M E S T A M P T Z;


A_KW : A;
ABORT : A B O R T;
ABS : A B S;
ABSENT : A B S E N T;
ABSOLUTE : A B S O L U T E;
ACCESS : A C C E S S;
ACCORDING : A C C O R D I N G;
ACOS : A C O S;
ACTION : A C T I O N;
ADA : A D A;
ADD : A D D;
ADMIN : A D M I N;
AFTER : A F T E R;
AGGREGATE : A G G R E G A T E;
ALL : A L L;
ALLOCATE : A L L O C A T E;
ALSO : A L S O;
ALTER : A L T E R;
ALWAYS : A L W A Y S;
ANALYSE : A N A L Y S E;
ANALYZE : A N A L Y Z E;
AND : A N D;
ANY : A N Y;
ANY_VALUE : A N Y '_' V A L U E;
ARE : A R E;
ARRAY : A R R A Y;
ARRAY_AGG : A R R A Y '_' A G G;
ARRAY_MAX_CARDINALITY : A R R A Y '_' M A X '_' C A R D I N A L I T Y;
AS : A S;
ASC : A S C;
ASENSITIVE : A S E N S I T I V E;
ASIN : A S I N;
ASSERTION : A S S E R T I O N;
ASSIGNMENT : A S S I G N M E N T;
ASYMMETRIC : A S Y M M E T R I C;
AT : A T;
ATAN : A T A N;
ATOMIC : A T O M I C;
ATTACH : A T T A C H;
ATTRIBUTE : A T T R I B U T E;
ATTRIBUTES : A T T R I B U T E S;
AUTHORIZATION : A U T H O R I Z A T I O N;
AVG : A V G;
BACKWARD : B A C K W A R D;
BASE64 : B A S E '64';
BEFORE : B E F O R E;
BEGIN : B E G I N;
BEGIN_FRAME : B E G I N '_' F R A M E;
BEGIN_PARTITION : B E G I N '_' P A R T I T I O N;
BERNOULLI : B E R N O U L L I;
BETWEEN : B E T W E E N;
BIGINT : B I G I N T;
BINARY : B I N A R Y;
BIT : B I T;
BIT_LENGTH : B I T '_' L E N G T H;
BLOB : B L O B;
BLOCKED : B L O C K E D;
BOM : B O M;
BOOLEAN : B O O L E A N;
BOTH : B O T H;
BREADTH : B R E A D T H;
BTRIM : B T R I M;
BY : B Y;
C_KW : C;
CACHE : C A C H E;
CALL : C A L L;
CALLED : C A L L E D;
CARDINALITY : C A R D I N A L I T Y;
CASCADE : C A S C A D E;
CASCADED : C A S C A D E D;
CASE : C A S E;
CAST : C A S T;
CATALOG : C A T A L O G;
CATALOG_NAME : C A T A L O G '_' N A M E;
CEIL : C E I L;
CEILING : C E I L I N G;
CHAIN : C H A I N;
CHAINING : C H A I N I N G;
CHARACTER : C H A R A C T E R;
CHARACTERISTICS : C H A R A C T E R I S T I C S;
CHARACTERS : C H A R A C T E R S;
CHARACTER_LENGTH : C H A R A C T E R '_' L E N G T H;
CHARACTER_SET_CATALOG : C H A R A C T E R '_' S E T '_' C A T A L O G;
CHARACTER_SET_NAME : C H A R A C T E R '_' S E T '_' N A M E;
CHARACTER_SET_SCHEMA : C H A R A C T E R '_' S E T '_' S C H E M A;
CHAR_LENGTH : C H A R '_' L E N G T H;
CHECK : C H E C K;
CHECKPOINT : C H E C K P O I N T;
CLASS : C L A S S;
CLASSIFIER : C L A S S I F I E R;
CLASS_ORIGIN : C L A S S '_' O R I G I N;
CLOB : C L O B;
CLOSE : C L O S E;
CLUSTER : C L U S T E R;
COALESCE : C O A L E S C E;
COBOL : C O B O L;
COLLATE : C O L L A T E;
COLLATION : C O L L A T I O N;
COLLATION_CATALOG : C O L L A T I O N '_' C A T A L O G;
COLLATION_NAME : C O L L A T I O N '_' N A M E;
COLLATION_SCHEMA : C O L L A T I O N '_' S C H E M A;
COLLECT : C O L L E C T;
COLUMN : C O L U M N;
COLUMNS : C O L U M N S;
COLUMN_NAME : C O L U M N '_' N A M E;
COMMAND_FUNCTION : C O M M A N D '_' F U N C T I O N;
COMMAND_FUNCTION_CODE : C O M M A N D '_' F U N C T I O N '_' C O D E;
COMMENT : C O M M E N T;
COMMENTS : C O M M E N T S;
COMMIT : C O M M I T;
COMMITTED : C O M M I T T E D;
COMPRESSION : C O M P R E S S I O N;
CONCURRENTLY : C O N C U R R E N T L Y;
CONDITION : C O N D I T I O N;
CONDITIONAL : C O N D I T I O N A L;
CONDITION_NUMBER : C O N D I T I O N '_' N U M B E R;
CONFIGURATION : C O N F I G U R A T I O N;
CONFLICT : C O N F L I C T;
CONNECT : C O N N E C T;
CONNECTION : C O N N E C T I O N;
CONNECTION_NAME : C O N N E C T I O N '_' N A M E;
CONSTRAINT : C O N S T R A I N T;
CONSTRAINTS : C O N S T R A I N T S;
CONSTRAINT_CATALOG : C O N S T R A I N T '_' C A T A L O G;
CONSTRAINT_NAME : C O N S T R A I N T '_' N A M E;
CONSTRAINT_SCHEMA : C O N S T R A I N T '_' S C H E M A;
CONSTRUCTOR : C O N S T R U C T O R;
CONTAINS : C O N T A I N S;
CONTENT : C O N T E N T;
CONTINUE : C O N T I N U E;
CONTROL : C O N T R O L;
CONVERSION : C O N V E R S I O N;
CONVERT : C O N V E R T;
COPARTITION : C O P A R T I T I O N;
COPY : C O P Y;
CORR : C O R R;
CORRESPONDING : C O R R E S P O N D I N G;
COS : C O S;
COSH : C O S H;
COST : C O S T;
COUNT : C O U N T;
COVAR_POP : C O V A R '_' P O P;
COVAR_SAMP : C O V A R '_' S A M P;
CREATE : C R E A T E;
CROSS : C R O S S;
CSV : C S V;
CUBE : C U B E;
CUME_DIST : C U M E '_' D I S T;
CURRENT : C U R R E N T;
CURRENT_CATALOG : C U R R E N T '_' C A T A L O G;
CURRENT_DATE : C U R R E N T '_' D A T E;
CURRENT_DEFAULT_TRANSFORM_GROUP : C U R R E N T '_' D E F A U L T '_' T R A N S F O R M '_' G R O U P;
CURRENT_PATH : C U R R E N T '_' P A T H;
CURRENT_ROLE : C U R R E N T '_' R O L E;
CURRENT_ROW : C U R R E N T '_' R O W;
CURRENT_SCHEMA : C U R R E N T '_' S C H E M A;
CURRENT_TIME : C U R R E N T '_' T I M E;
CURRENT_TIMESTAMP : C U R R E N T '_' T I M E S T A M P;
CURRENT_TRANSFORM_GROUP_FOR_TYPE : C U R R E N T '_' T R A N S F O R M '_' G R O U P '_' F O R '_' T Y P E;
CURRENT_USER : C U R R E N T '_' U S E R;
CURSOR : C U R S O R;
CURSOR_NAME : C U R S O R '_' N A M E;
CYCLE : C Y C L E;
DATA : D A T A;
DATABASE : D A T A B A S E;
DATALINK : D A T A L I N K;
DATE : D A T E;
DATETIME_INTERVAL_CODE : D A T E T I M E '_' I N T E R V A L '_' C O D E;
DATETIME_INTERVAL_PRECISION : D A T E T I M E '_' I N T E R V A L '_' P R E C I S I O N;
DAY : D A Y;
DB : D B;
DEALLOCATE : D E A L L O C A T E;
DEC : D E C;
DECFLOAT : D E C F L O A T;
DECLARE : D E C L A R E;
DEFAULT : D E F A U L T;
DEFAULTS : D E F A U L T S;
DEFERRABLE : D E F E R R A B L E;
DEFERRED : D E F E R R E D;
DEFINE : D E F I N E;
DEFINED : D E F I N E D;
DEFINER : D E F I N E R;
DEGREE : D E G R E E;
DELETE : D E L E T E;
DELIMITER : D E L I M I T E R;
DELIMITERS : D E L I M I T E R S;
DENSE_RANK : D E N S E '_' R A N K;
DEPENDS : D E P E N D S;
DEPTH : D E P T H;
DEREF : D E R E F;
DERIVED : D E R I V E D;
DESC : D E S C;
DESCRIBE : D E S C R I B E;
DESCRIPTOR : D E S C R I P T O R;
DETACH : D E T A C H;
DETERMINISTIC : D E T E R M I N I S T I C;
DIAGNOSTICS : D I A G N O S T I C S;
DICTIONARY : D I C T I O N A R Y;
DISABLE : D I S A B L E;
DISCARD : D I S C A R D;
DISCONNECT : D I S C O N N E C T;
DISPATCH : D I S P A T C H;
DISTINCT : D I S T I N C T;
DLNEWCOPY : D L N E W C O P Y;
DLPREVIOUSCOPY : D L P R E V I O U S C O P Y;
DLURLCOMPLETE : D L U R L C O M P L E T E;
DLURLCOMPLETEONLY : D L U R L C O M P L E T E O N L Y;
DLURLCOMPLETEWRITE : D L U R L C O M P L E T E W R I T E;
DLURLPATH : D L U R L P A T H;
DLURLPATHONLY : D L U R L P A T H O N L Y;
DLURLPATHWRITE : D L U R L P A T H W R I T E;
DLURLSCHEME : D L U R L S C H E M E;
DLURLSERVER : D L U R L S E R V E R;
DLVALUE : D L V A L U E;
DO : D O;
DOCUMENT : D O C U M E N T;
DOMAIN : D O M A I N;
DOUBLE : D O U B L E;
DROP : D R O P;
DYNAMIC : D Y N A M I C;
DYNAMIC_FUNCTION : D Y N A M I C '_' F U N C T I O N;
DYNAMIC_FUNCTION_CODE : D Y N A M I C '_' F U N C T I O N '_' C O D E;
EACH : E A C H;
ELEMENT : E L E M E N T;
ELSE : E L S E;
EMPTY : E M P T Y;
ENABLE : E N A B L E;
ENCODING : E N C O D I N G;
ENCRYPTED : E N C R Y P T E D;
END : E N D;
END_EXEC : E N D '-' E X E C;
END_FRAME : E N D '_' F R A M E;
END_PARTITION : E N D '_' P A R T I T I O N;
ENFORCED : E N F O R C E D;
ENUM : E N U M;
EQUALS : E Q U A L S;
ERROR : E R R O R;
ESCAPE : E S C A P E;
EVENT : E V E N T;
EVERY : E V E R Y;
EXCEPT : E X C E P T;
EXCEPTION : E X C E P T I O N;
EXCLUDE : E X C L U D E;
EXCLUDING : E X C L U D I N G;
EXCLUSIVE : E X C L U S I V E;
EXEC : E X E C;
EXECUTE : E X E C U T E;
EXISTS : E X I S T S;
EXP : E X P;
EXPLAIN : E X P L A I N;
EXPRESSION : E X P R E S S I O N;
EXTENSION : E X T E N S I O N;
EXTERNAL : E X T E R N A L;
EXTRACT : E X T R A C T;
FALSE : F A L S E;
FAMILY : F A M I L Y;
FETCH : F E T C H;
FILE : F I L E;
FILTER : F I L T E R;
FINAL : F I N A L;
FINALIZE : F I N A L I Z E;
FINISH : F I N I S H;
FIRST : F I R S T;
FIRST_VALUE : F I R S T '_' V A L U E;
FLAG : F L A G;
FLOAT : F L O A T;
FLOOR : F L O O R;
FOLLOWING : F O L L O W I N G;
FOR : F O R;
FORCE : F O R C E;
FOREIGN : F O R E I G N;
FORMAT : F O R M A T;
FORTRAN : F O R T R A N;
FORWARD : F O R W A R D;
FOUND : F O U N D;
FRAME_ROW : F R A M E '_' R O W;
FREE : F R E E;
FREEZE : F R E E Z E;
FROM : F R O M;
FS : F S;
FULFILL : F U L F I L L;
FULL : F U L L;
FUNCTION : F U N C T I O N;
FUNCTIONS : F U N C T I O N S;
FUSION : F U S I O N;
G_KW : G;
GENERAL : G E N E R A L;
GENERATED : G E N E R A T E D;
GET : G E T;
GLOBAL : G L O B A L;
GO : G O;
GOTO : G O T O;
GRANT : G R A N T;
GRANTED : G R A N T E D;
GREATEST : G R E A T E S T;
GROUP : G R O U P;
GROUPING : G R O U P I N G;
GROUPS : G R O U P S;
HANDLER : H A N D L E R;
HAVING : H A V I N G;
HEADER : H E A D E R;
HEX : H E X;
HIERARCHY : H I E R A R C H Y;
HOLD : H O L D;
HOUR : H O U R;
ID : I D;
IDENTITY : I D E N T I T Y;
IF : I F;
IGNORE : I G N O R E;
ILIKE : I L I K E;
IMMEDIATE : I M M E D I A T E;
IMMEDIATELY : I M M E D I A T E L Y;
IMMUTABLE : I M M U T A B L E;
IMPLEMENTATION : I M P L E M E N T A T I O N;
IMPLICIT : I M P L I C I T;
IMPORT : I M P O R T;
IN : I N;
INCLUDE : I N C L U D E;
INCLUDING : I N C L U D I N G;
INCREMENT : I N C R E M E N T;
INDENT : I N D E N T;
INDEX : I N D E X;
INDEXES : I N D E X E S;
INDICATOR : I N D I C A T O R;
INHERIT : I N H E R I T;
INHERITS : I N H E R I T S;
INITIAL : I N I T I A L;
INITIALLY : I N I T I A L L Y;
INLINE : I N L I N E;
INNER : I N N E R;
INOUT : I N O U T;
INPUT : I N P U T;
INSENSITIVE : I N S E N S I T I V E;
INSERT : I N S E R T;
INSTANCE : I N S T A N C E;
INSTANTIABLE : I N S T A N T I A B L E;
INSTEAD : I N S T E A D;
INTEGER : I N T E G E R;
INTEGRITY : I N T E G R I T Y;
INTERSECT : I N T E R S E C T;
INTERSECTION : I N T E R S E C T I O N;
INTERVAL : I N T E R V A L;
INTO : I N T O;
INVOKER : I N V O K E R;
IS : I S;
ISNULL : I S ' ' N U L L;
ISOLATION : I S O L A T I O N;
JOIN : J O I N;
JSON : J S O N;
JSON_ARRAY : J S O N '_' A R R A Y;
JSON_ARRAYAGG : J S O N '_' A R R A Y A G G;
JSON_EXISTS : J S O N '_' E X I S T S;
JSON_OBJECT : J S O N '_' O B J E C T;
JSON_OBJECTAGG : J S O N '_' O B J E C T A G G;
JSON_QUERY : J S O N '_' Q U E R Y;
JSON_SCALAR : J S O N '_' S C A L A R;
JSON_SERIALIZE : J S O N '_' S E R I A L I Z E;
JSON_TABLE : J S O N '_' T A B L E;
JSON_TABLE_PRIMITIVE : J S O N '_' T A B L E '_' P R I M I T I V E;
JSON_VALUE : J S O N '_' V A L U E;
K_KW : K;
KEEP : K E E P;
KEY : K E Y;
KEYS : K E Y S;
KEY_MEMBER : K E Y '_' M E M B E R;
KEY_TYPE : K E Y '_' T Y P E;
LABEL : L A B E L;
LAG : L A G;
LANGUAGE : L A N G U A G E;
LARGE : L A R G E;
LAST : L A S T;
LAST_VALUE : L A S T '_' V A L U E;
LATERAL : L A T E R A L;
LEAD : L E A D;
LEADING : L E A D I N G;
LEAKPROOF : L E A K P R O O F;
LEAST : L E A S T;
LEFT : L E F T;
LENGTH : L E N G T H;
LEVEL : L E V E L;
LIBRARY : L I B R A R Y;
LIKE : L I K E;
LIKE_REGEX : L I K E '_' R E G E X;
LIMIT : L I M I T;
LINK : L I N K;
LISTAGG : L I S T A G G;
LISTEN : L I S T E N;
LN : L N;
LOAD : L O A D;
LOCAL : L O C A L;
LOCALTIME : L O C A L T I M E;
LOCALTIMESTAMP : L O C A L T I M E S T A M P;
LOCATION : L O C A T I O N;
LOCATOR : L O C A T O R;
LOCK : L O C K;
LOCKED : L O C K E D;
LOG : L O G;
LOG10 : L O G '10';
LOGGED : L O G G E D;
LOWER : L O W E R;
LPAD : L P A D;
LTRIM : L T R I M;
M_KW : M;
MAP : M A P;
MAPPING : M A P P I N G;
MATCH : M A T C H;
MATCHED : M A T C H E D;
MATCHES : M A T C H E S;
MATCH_NUMBER : M A T C H '_' N U M B E R;
MATCH_RECOGNIZE : M A T C H '_' R E C O G N I Z E;
MATERIALIZED : M A T E R I A L I Z E D;
MAX : M A X;
MAXVALUE : M A X V A L U E;
MEASURES : M E A S U R E S;
MEMBER : M E M B E R;
MERGE : M E R G E;
MESSAGE_LENGTH : M E S S A G E '_' L E N G T H;
MESSAGE_OCTET_LENGTH : M E S S A G E '_' O C T E T '_' L E N G T H;
MESSAGE_TEXT : M E S S A G E '_' T E X T;
METHOD : M E T H O D;
MIN : M I N;
MINUTE : M I N U T E;
MINVALUE : M I N V A L U E;
MOD : M O D;
MODE : M O D E;
MODIFIES : M O D I F I E S;
MODULE : M O D U L E;
MONTH : M O N T H;
MORE_KW : M O R E;
MOVE : M O V E;
MULTISET : M U L T I S E T;
MUMPS : M U M P S;
NAME : N A M E;
NAMES : N A M E S;
NAMESPACE : N A M E S P A C E;
NATIONAL : N A T I O N A L;
NATURAL : N A T U R A L;
NCHAR : N C H A R;
NCLOB : N C L O B;
NESTED : N E S T E D;
NESTING : N E S T I N G;
NEW : N E W;
NEXT : N E X T;
NFC : N F C;
NFD : N F D;
NFKC : N F K C;
NFKD : N F K D;
NIL : N I L;
NO : N O;
NONE : N O N E;
NORMALIZE : N O R M A L I Z E;
NORMALIZED : N O R M A L I Z E D;
NOT : N O T;
NOTHING : N O T H I N G;
NOTIFY : N O T I F Y;
NOTNULL : N O T N U L L;
NOWAIT : N O W A I T;
NTH_VALUE : N T H '_' V A L U E;
NTILE : N T I L E;
NULL : N U L L;
NULLABLE : N U L L A B L E;
NULLIF : N U L L I F;
NULLS : N U L L S;
NULL_ORDERING : N U L L '_' O R D E R I N G;
NUMBER : N U M B E R;
NUMERIC : N U M E R I C;
OBJECT : O B J E C T;
OCCURRENCE : O C C U R R E N C E;
OCCURRENCES_REGEX : O C C U R R E N C E S '_' R E G E X;
OCTETS : O C T E T S;
OCTET_LENGTH : O C T E T '_' L E N G T H;
OF : O F;
OFF : O F F;
OFFSET : O F F S E T;
OIDS : O I D S;
OLD : O L D;
OMIT : O M I T;
ON : O N;
ONE : O N E;
ONLY : O N L Y;
OPEN : O P E N;
OPERATOR_KW : O P E R A T O R;
OPTION : O P T I O N;
OPTIONS : O P T I O N S;
OR : O R;
ORDER : O R D E R;
ORDERING : O R D E R I N G;
ORDINALITY : O R D I N A L I T Y;
OTHERS : O T H E R S;
OUT : O U T;
OUTER : O U T E R;
OUTPUT : O U T P U T;
OVER : O V E R;
OVERFLOW : O V E R F L O W;
OVERLAPS : O V E R L A P S;
OVERLAY : O V E R L A Y;
OVERRIDING : O V E R R I D I N G;
OWNED : O W N E D;
OWNER : O W N E R;
P_KW : P;
PAD : P A D;
PARALLEL : P A R A L L E L;
PARAMETER : P A R A M E T E R;
PARAMETER_MODE : P A R A M E T E R '_' M O D E;
PARAMETER_NAME : P A R A M E T E R '_' N A M E;
PARAMETER_ORDINAL_POSITION : P A R A M E T E R '_' O R D I N A L '_' P O S I T I O N;
PARAMETER_SPECIFIC_CATALOG : P A R A M E T E R '_' S P E C I F I C '_' C A T A L O G;
PARAMETER_SPECIFIC_NAME : P A R A M E T E R '_' S P E C I F I C '_' N A M E;
PARAMETER_SPECIFIC_SCHEMA : P A R A M E T E R '_' S P E C I F I C '_' S C H E M A;
PARSER : P A R S E R;
PARTIAL : P A R T I A L;
PARTITION : P A R T I T I O N;
PASCAL : P A S C A L;
PASS : P A S S;
PASSING : P A S S I N G;
PASSTHROUGH : P A S S T H R O U G H;
PASSWORD : P A S S W O R D;
PAST : P A S T;
PATH : P A T H;
PATTERN : P A T T E R N;
PER : P E R;
PERCENT : P E R C E N T;
PERCENTILE_CONT : P E R C E N T I L E '_' C O N T;
PERCENTILE_DISC : P E R C E N T I L E '_' D I S C;
PERCENT_RANK : P E R C E N T '_' R A N K;
PERIOD : P E R I O D;
PERMISSION : P E R M I S S I O N;
PERMUTE : P E R M U T E;
PIPE : P I P E;
PLACING : P L A C I N G;
PLAN : P L A N;
PLANS : P L A N S;
PLI : P L I;
POLICY : P O L I C Y;
PORTION : P O R T I O N;
POSITION : P O S I T I O N;
POSITION_REGEX : P O S I T I O N '_' R E G E X;
POWER : P O W E R;
PRECEDES : P R E C E D E S;
PRECEDING : P R E C E D I N G;
PRECISION : P R E C I S I O N;
PREPARE : P R E P A R E;
PREPARED : P R E P A R E D;
PRESERVE : P R E S E R V E;
PREV : P R E V;
PRIMARY : P R I M A R Y;
PRIOR : P R I O R;
PRIVATE : P R I V A T E;
PRIVILEGES : P R I V I L E G E S;
PROCEDURAL : P R O C E D U R A L;
PROCEDURE : P R O C E D U R E;
PROCEDURES : P R O C E D U R E S;
PROGRAM : P R O G R A M;
PRUNE : P R U N E;
PTF : P T F;
PUBLIC : P U B L I C;
PUBLICATION : P U B L I C A T I O N;
QUOTE_KW : Q U O T E;
QUOTES : Q U O T E S;
RANGE : R A N G E;
RANK : R A N K;
READ : R E A D;
READS : R E A D S;
REAL : R E A L;
REASSIGN : R E A S S I G N;
RECHECK : R E C H E C K;
RECOVERY : R E C O V E R Y;
RECURSIVE : R E C U R S I V E;
REF : R E F;
REFERENCES : R E F E R E N C E S;
REFERENCING : R E F E R E N C I N G;
REFRESH : R E F R E S H;
REGR_AVGX : R E G R '_' A V G X;
REGR_AVGY : R E G R '_' A V G Y;
REGR_COUNT : R E G R '_' C O U N T;
REGR_INTERCEPT : R E G R '_' I N T E R C E P T;
REGR_R2 : R E G R '_' R '2';
REGR_SLOPE : R E G R '_' S L O P E;
REGR_SXX : R E G R '_' S X X;
REGR_SXY : R E G R '_' S X Y;
REGR_SYY : R E G R '_' S Y Y;
REINDEX : R E I N D E X;
RELATIVE : R E L A T I V E;
RELEASE : R E L E A S E;
RENAME : R E N A M E;
REPEATABLE : R E P E A T A B L E;
REPLACE : R E P L A C E;
REPLICA : R E P L I C A;
REQUIRING : R E Q U I R I N G;
RESET : R E S E T;
RESPECT : R E S P E C T;
RESTART : R E S T A R T;
RESTORE : R E S T O R E;
RESTRICT : R E S T R I C T;
RESULT : R E S U L T;
RETURN : R E T U R N;
RETURNED_CARDINALITY : R E T U R N E D '_' C A R D I N A L I T Y;
RETURNED_LENGTH : R E T U R N E D '_' L E N G T H;
RETURNED_OCTET_LENGTH : R E T U R N E D '_' O C T E T '_' L E N G T H;
RETURNED_SQLSTATE : R E T U R N E D '_' S Q L S T A T E;
RETURNING : R E T U R N I N G;
RETURNS : R E T U R N S;
REVOKE : R E V O K E;
RIGHT : R I G H T;
ROLE : R O L E;
ROLLBACK : R O L L B A C K;
ROLLUP : R O L L U P;
ROUTINE : R O U T I N E;
ROUTINES : R O U T I N E S;
ROUTINE_CATALOG : R O U T I N E '_' C A T A L O G;
ROUTINE_NAME : R O U T I N E '_' N A M E;
ROUTINE_SCHEMA : R O U T I N E '_' S C H E M A;
ROW : R O W;
ROWS : R O W S;
ROW_COUNT : R O W '_' C O U N T;
ROW_NUMBER : R O W '_' N U M B E R;
RPAD : R P A D;
RTRIM : R T R I M;
RULE : R U L E;
RUNNING : R U N N I N G;
SAVEPOINT : S A V E P O I N T;
SCALAR : S C A L A R;
SCALE : S C A L E;
SCHEMA : S C H E M A;
SCHEMAS : S C H E M A S;
SCHEMA_NAME : S C H E M A '_' N A M E;
SCOPE : S C O P E;
SCOPE_CATALOG : S C O P E '_' C A T A L O G;
SCOPE_NAME : S C O P E '_' N A M E;
SCOPE_SCHEMA : S C O P E '_' S C H E M A;
SCROLL : S C R O L L;
SEARCH : S E A R C H;
SECOND : S E C O N D;
SECTION : S E C T I O N;
SECURITY : S E C U R I T Y;
SEEK : S E E K;
SELECT : S E L E C T;
SELECTIVE : S E L E C T I V E;
SELF : S E L F;
SEMANTICS : S E M A N T I C S;
SENSITIVE : S E N S I T I V E;
SEQUENCE : S E Q U E N C E;
SEQUENCES : S E Q U E N C E S;
SERIALIZABLE : S E R I A L I Z A B L E;
SERVER : S E R V E R;
SERVER_NAME : S E R V E R '_' N A M E;
SESSION : S E S S I O N;
SESSION_USER : S E S S I O N '_' U S E R;
SET : S E T;
SETOF : S E T O F;
SETS : S E T S;
SHARE : S H A R E;
SHOW : S H O W;
SIMILAR : S I M I L A R;
SIMPLE : S I M P L E;
SIN : S I N;
SINH : S I N H;
SIZE : S I Z E;
SKIP_KW : S K I P;
SMALLINT : S M A L L I N T;
SNAPSHOT : S N A P S H O T;
SOME : S O M E;
SORT_DIRECTION : S O R T '_' D I R E C T I O N;
SOURCE : S O U R C E;
SPACE : S P A C E;
SPECIFIC : S P E C I F I C;
SPECIFICTYPE : S P E C I F I C T Y P E;
SPECIFIC_NAME : S P E C I F I C '_' N A M E;
SQL : S Q L;
SQLCODE : S Q L C O D E;
SQLERROR : S Q L E R R O R;
SQLEXCEPTION : S Q L E X C E P T I O N;
SQLSTATE : S Q L S T A T E;
SQLWARNING : S Q L W A R N I N G;
SQRT : S Q R T;
STABLE : S T A B L E;
STANDALONE : S T A N D A L O N E;
START : S T A R T;
STATE : S T A T E;
STATEMENT : S T A T E M E N T;
STATIC : S T A T I C;
STATISTICS : S T A T I S T I C S;
STDDEV_POP : S T D D E V '_' P O P;
STDDEV_SAMP : S T D D E V '_' S A M P;
STDIN : S T D I N;
STDOUT : S T D O U T;
STORAGE : S T O R A G E;
STORED : S T O R E D;
STRICT : S T R I C T;
STRING : S T R I N G;
STRIP : S T R I P;
STRUCTURE : S T R U C T U R E;
STYLE : S T Y L E;
SUBCLASS_ORIGIN : S U B C L A S S '_' O R I G I N;
SUBMULTISET : S U B M U L T I S E T;
SUBSCRIPTION : S U B S C R I P T I O N;
SUBSET : S U B S E T;
SUBSTRING : S U B S T R I N G;
SUBSTRING_REGEX : S U B S T R I N G '_' R E G E X;
SUCCEEDS : S U C C E E D S;
SUM : S U M;
SUPPORT : S U P P O R T;
SYMMETRIC : S Y M M E T R I C;
SYSID : S Y S I D;
SYSTEM : S Y S T E M;
SYSTEM_TIME : S Y S T E M '_' T I M E;
SYSTEM_USER : S Y S T E M '_' U S E R;
T_KW : T;
TABLE : T A B L E;
TABLES : T A B L E S;
TABLESAMPLE : T A B L E S A M P L E;
TABLESPACE : T A B L E S P A C E;
TABLE_NAME : T A B L E '_' N A M E;
TAN : T A N;
TANH : T A N H;
TEMP : T E M P;
TEMPLATE : T E M P L A T E;
TEMPORARY : T E M P O R A R Y;
TEXT : T E X T;
THEN : T H E N;
THROUGH : T H R O U G H;
TIES : T I E S;
TIME : T I M E;
TIMESTAMP : T I M E S T A M P;
TIMEZONE_HOUR : T I M E Z O N E '_' H O U R;
TIMEZONE_MINUTE : T I M E Z O N E '_' M I N U T E;
TO : T O;
TOKEN : T O K E N;
TOP_LEVEL_COUNT : T O P '_' L E V E L '_' C O U N T;
TRAILING : T R A I L I N G;
TRANSACTION : T R A N S A C T I O N;
TRANSACTIONS_COMMITTED : T R A N S A C T I O N S '_' C O M M I T T E D;
TRANSACTIONS_ROLLED_BACK : T R A N S A C T I O N S '_' R O L L E D '_' B A C K;
TRANSACTION_ACTIVE : T R A N S A C T I O N '_' A C T I V E;
TRANSFORM : T R A N S F O R M;
TRANSFORMS : T R A N S F O R M S;
TRANSLATE : T R A N S L A T E;
TRANSLATE_REGEX : T R A N S L A T E '_' R E G E X;
TRANSLATION : T R A N S L A T I O N;
TREAT : T R E A T;
TRIGGER : T R I G G E R;
TRIGGER_CATALOG : T R I G G E R '_' C A T A L O G;
TRIGGER_NAME : T R I G G E R '_' N A M E;
TRIGGER_SCHEMA : T R I G G E R '_' S C H E M A;
TRIM : T R I M;
TRIM_ARRAY : T R I M '_' A R R A Y;
TRUE : T R U E;
TRUNCATE : T R U N C A T E;
TRUSTED : T R U S T E D;
TYPE : T Y P E;
TYPES : T Y P E S;
UESCAPE : U E S C A P E;
UNBOUNDED : U N B O U N D E D;
UNCOMMITTED : U N C O M M I T T E D;
UNCONDITIONAL : U N C O N D I T I O N A L;
UNDER : U N D E R;
UNENCRYPTED : U N E N C R Y P T E D;
UNION : U N I O N;
UNIQUE : U N I Q U E;
UNKNOWN : U N K N O W N;
UNLINK : U N L I N K;
UNLISTEN : U N L I S T E N;
UNLOGGED : U N L O G G E D;
UNMATCHED : U N M A T C H E D;
UNNAMED : U N N A M E D;
UNNEST : U N N E S T;
UNTIL : U N T I L;
UNTYPED : U N T Y P E D;
UPDATE : U P D A T E;
UPPER : U P P E R;
URI : U R I;
USAGE : U S A G E;
USER : U S E R;
USER_DEFINED_TYPE_CATALOG : U S E R '_' D E F I N E D '_' T Y P E '_' C A T A L O G;
USER_DEFINED_TYPE_CODE : U S E R '_' D E F I N E D '_' T Y P E '_' C O D E;
USER_DEFINED_TYPE_NAME : U S E R '_' D E F I N E D '_' T Y P E '_' N A M E;
USER_DEFINED_TYPE_SCHEMA : U S E R '_' D E F I N E D '_' T Y P E '_' S C H E M A;
USING : U S I N G;
UTF16 : U T F '16';
UTF32 : U T F '32';
UTF8 : U T F '8';
VACUUM : V A C U U M;
VALID : V A L I D;
VALIDATE : V A L I D A T E;
VALIDATOR : V A L I D A T O R;
VALUE : V A L U E;
VALUES : V A L U E S;
VALUE_OF : V A L U E '_' O F;
VARBINARY : V A R B I N A R Y;
VARCHAR : V A R C H A R;
VARIADIC : V A R I A D I C;
VARYING : V A R Y I N G;
VAR_POP : V A R '_' P O P;
VAR_SAMP : V A R '_' S A M P;
VERBOSE : V E R B O S E;
VERSION : V E R S I O N;
VERSIONING : V E R S I O N I N G;
VIEW : V I E W;
VIEWS : V I E W S;
VOLATILE : V O L A T I L E;
WHEN : W H E N;
WHENEVER : W H E N E V E R;
WHERE : W H E R E;
WHITESPACE : W H I T E S P A C E;
WIDTH_BUCKET : W I D T H '_' B U C K E T;
WINDOW : W I N D O W;
WITH : W I T H;
WITHIN : W I T H I N;
WITHOUT : W I T H O U T;
WORK : W O R K;
WRAPPER : W R A P P E R;
WRITE : W R I T E;
XML : X M L;
XMLAGG : X M L A G G;
XMLATTRIBUTES : X M L A T T R I B U T E S;
XMLBINARY : X M L B I N A R Y;
XMLCAST : X M L C A S T;
XMLCOMMENT : X M L C O M M E N T;
XMLCONCAT : X M L C O N C A T;
XMLDECLARATION : X M L D E C L A R A T I O N;
XMLDOCUMENT : X M L D O C U M E N T;
XMLELEMENT : X M L E L E M E N T;
XMLEXISTS : X M L E X I S T S;
XMLFOREST : X M L F O R E S T;
XMLITERATE : X M L I T E R A T E;
XMLNAMESPACES : X M L N A M E S P A C E S;
XMLPARSE : X M L P A R S E;
XMLPI : X M L P I;
XMLQUERY : X M L Q U E R Y;
XMLROOT : X M L R O O T;
XMLSCHEMA : X M L S C H E M A;
XMLSERIALIZE : X M L S E R I A L I Z E;
XMLTABLE : X M L T A B L E;
XMLTEXT : X M L T E X T;
XMLVALIDATE : X M L V A L I D A T E;
YEAR : Y E A R;
YES : Y E S;
ZONE : Z O N E;

WORD: [_a-zA-Z] [_a-zA-Z0-9]*;
UNKNOWN_WORD: ~[; \t\r\n] -> pushMode(INSIDE_UNKNOWN_WORD);

// For cace insensitive. you can write things like fragment
// C A S E and will much any case like CaSe or CASE or case
fragment A:[aA];
fragment B:[bB];
fragment C:[cC];
fragment D:[dD];
fragment E:[eE];
fragment F:[fF];
fragment G:[gG];
fragment H:[hH];
fragment I:[iI];
fragment J:[jJ];
fragment K:[kK];
fragment L:[lL];
fragment M:[mM];
fragment N:[nN];
fragment O:[oO];
fragment P:[pP];
fragment Q:[qQ];
fragment R:[rR];
fragment S:[sS];
fragment T:[tT];
fragment U:[uU];
fragment V:[vV];
fragment W:[wW];
fragment X:[xX];
fragment Y:[yY];
fragment Z:[zZ];

fragment DIGIT: [0-9];
fragment EXPONENT: E [+-]? DIGIT+;

fragment ESC: '\\' (["\\/'bfnrtoux]) ;
WS : [ \t\r\n]+ -> skip ;

mode INSIDE_SINGLE_LINE_COMMENT;
SL_TYPE_KW: '@type';
SL_DEFAULT_KW: '@default';
SL_PARAM_KW: '@param';
SL_RETURN_KW: '@return';
SL_UNKNOWN_TOKEN: '@' SL_WORD;
SL_WORD: ~[ \t\r\n]+ '(' .*? ')' | ~[ \t\r\n]+;

SL_SPACES: [ ][ ][ ][ ][ ]+;

SL_LINE_COMMENT_END: ('\n' | '\r' | '\r\n') -> popMode;

SL_WS : [ ] -> skip;


mode INSIDE_MULTI_LINE_COMMENT;
ML_TYPE_KW: '@type';
ML_DEFAULT_KW: '@default';
ML_PARAM_KW: '@param';
ML_RETURN_KW: '@return';
ML_UNKNOWN_TOKEN: '@' .*?;
ML_WORD: ML_W+ '(' .*? ')' | ML_W+;
fragment ML_W: ([a-zA-Z0-9]+ | '!' | '@' | '#' | '$' | '%' | '^' | '&'  | '_' | '+' | '\'' | '"' | '`' | '.' | '-' | ',' | ':' | '/');

ML_WS : [ \t\r\n]+ -> skip;

MULTI_LINE_COMMENT_END: '*/' -> popMode;
ML_STAR: '*';

mode INSIDE_UNKNOWN_WORD;

UNKNOWN_WORD_END: [ \t\r\n;EOF] -> popMode;
UNKNOWN_WORD_END2: [)] -> type(R_PAREN), popMode;

IN_UNKNOWN_WORD: ~[;)];
