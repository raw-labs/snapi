The Kiama team are pleased to bring you the next release of the library.

### Deprecations
* [Output](http://wiki.kiama.googlecode.com/hg/doc/1.3.0/api/index.html#org.kiama.output.package)
    * The `product` method of the [`PrettyPrinter`](http://wiki.kiama.googlecode.com/hg/doc/1.3.0/api/index.html#org.kiama.output.PrettyPrinter) module has been deprecated. Use the new `any` method instead. There is also a new `pretty_any` convenience method.

### New features
* [Rewriting](http://wiki.kiama.googlecode.com/hg/doc/1.3.0/api/index.html#org.kiama.rewriting.package)
    * The rewriting module now has some support for [nominal rewriting](http://wiki.kiama.googlecode.com/hg/doc/1.3.0/api/index.html#org.kiama.rewriting.NominalRewriter). A new Lambda3 example shows how it can be used.
* [Utilities](http://wiki.kiama.googlecode.com/hg/doc/1.3.0/api/index.html#org.kiama.util.package)
    * A new [`Environments`](http://wiki.kiama.googlecode.com/hg/doc/1.3.0/api/index.html#org.kiama.util.Environments) trait that provides useful data structures and operations for name analysis attribution. (Formerly part of the Oberon0 example.)
    * New support for [`Positioned`](http://wiki.kiama.googlecode.com/hg/doc/1.3.0/api/index.html#org.kiama.util.Positioned) nodes which have both a start and finish position. The library doesn't use the Scala `Positional` class any more. There is also a new [`PositionedRewriter`](http://wiki.kiama.googlecode.com/hg/doc/1.3.0/api/index.html#org.kiama.rewriting.PositionedRewriter) that supports copying these positions during rewriting.
    * A new `parseString` method in [`ParserUtilities`](http://wiki.kiama.googlecode.com/hg/doc/1.3.0/api/index.html#org.kiama.util.ParserUtilities) to make it easier to test parsers.

### Other
* Various minor bug fixes, code simplifications and enhancements of examples.
* Move to Scala 2.9.2, ScalaTest 1.8, JLine 2.7 and argot 0.4
* There is now a [giter8](https://github.com/n8han/giter8) template for a [sample Kiama project](https://github.com/inkytonik/kiama.g8). You can use this template to quickly create a simple illustration project of Kiama's main features, including parsing, pretty-printing, attribution and rewriting.
