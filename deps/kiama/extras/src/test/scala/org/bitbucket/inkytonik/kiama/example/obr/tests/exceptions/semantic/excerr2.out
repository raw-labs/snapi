src/test/scala/org/bitbucket/inkytonik/kiama/example/obr/tests/exceptions/semantic/excerr2.obr:14:5:error: illegal assignment
    FallOverALot := 1;
    ^
src/test/scala/org/bitbucket/inkytonik/kiama/example/obr/tests/exceptions/semantic/excerr2.obr:14:21:error: expected exception type got integer
    FallOverALot := 1;
                    ^
src/test/scala/org/bitbucket/inkytonik/kiama/example/obr/tests/exceptions/semantic/excerr2.obr:15:5:error: illegal assignment
    DivideByZero := 10;
    ^
src/test/scala/org/bitbucket/inkytonik/kiama/example/obr/tests/exceptions/semantic/excerr2.obr:15:21:error: expected exception type got integer
    DivideByZero := 10;
                    ^
src/test/scala/org/bitbucket/inkytonik/kiama/example/obr/tests/exceptions/semantic/excerr2.obr:18:8:error: expected integer or any enumeration type got exception
    IF FallOverALot > 10 THEN
       ^
src/test/scala/org/bitbucket/inkytonik/kiama/example/obr/tests/exceptions/semantic/excerr2.obr:19:14:error: expected integer type got exception
        i := DivideByZero + 1;
             ^
src/test/scala/org/bitbucket/inkytonik/kiama/example/obr/tests/exceptions/semantic/excerr2.obr:23:5:error: raise parameter i must be an exception constant
    RAISE i;
    ^
src/test/scala/org/bitbucket/inkytonik/kiama/example/obr/tests/exceptions/semantic/excerr2.obr:28:5:error: catch clause parameter j must be an exception constant
    CATCH j DO
    ^
src/test/scala/org/bitbucket/inkytonik/kiama/example/obr/tests/exceptions/semantic/excerr2.obr:30:5:error: catch clause parameter i must be an exception constant
    CATCH i DO
    ^
src/test/scala/org/bitbucket/inkytonik/kiama/example/obr/tests/exceptions/semantic/excerr2.obr:36:14:error: true is not declared
        i := true;
             ^
src/test/scala/org/bitbucket/inkytonik/kiama/example/obr/tests/exceptions/semantic/excerr2.obr:38:9:error: illegal assignment
        FallOverALot := 1;
        ^
src/test/scala/org/bitbucket/inkytonik/kiama/example/obr/tests/exceptions/semantic/excerr2.obr:38:25:error: expected exception type got integer
        FallOverALot := 1;
                        ^
src/test/scala/org/bitbucket/inkytonik/kiama/example/obr/tests/exceptions/semantic/excerr2.obr:40:18:error: expected integer type got exception
        i := j + DivideByZero;
                 ^
