* _pp.ob
MODULE type;

    CONST
        aconst1 = 10;
        aconst2 = 20;

    TYPE
        atype1 = INTEGER;
        atype3 = BOOLEAN;
        aconst1 = INTEGER;
        atype4 = aconst2;
        atype2 = atype1;
        atype2 = atype1;
        atype3 = INTEGER;
        atype5 = INTEGER;
        atype6 = atype5;

    VAR
        avar1 : atype1;
        atype3 : INTEGER;
        avar2 : aconst2;
        avar3 : INTEGER;
        avar4 : BOOLEAN;
        avar5 : atype6;

BEGIN
    avar1 := 1;
    atype1 := 2;
    avar1 := avar1 + atype1;
    avar1 := avar1 * avar3;
    avar1 := avar1 DIV avar4;
    avar4 := avar1 # avar3;
    avar4 := avar1 = avar4;
    avar5 := 10
END type.
[2]* errors
[2]src/test/scala/org/bitbucket/inkytonik/kiama/example/oberon0/L0/tests/type.ob:10:5:error: aconst1 is already declared
[2]    aconst1 = INTEGER;
[2]    ^
[2]src/test/scala/org/bitbucket/inkytonik/kiama/example/oberon0/L0/tests/type.ob:11:14:error: aconst2 is not a type name
[2]    atype4 = aconst2;
[2]             ^
[2]src/test/scala/org/bitbucket/inkytonik/kiama/example/oberon0/L0/tests/type.ob:13:5:error: atype2 is already declared
[2]    atype2 = atype1;
[2]    ^
[2]src/test/scala/org/bitbucket/inkytonik/kiama/example/oberon0/L0/tests/type.ob:14:5:error: atype3 is already declared
[2]    atype3 = INTEGER;
[2]    ^
[2]src/test/scala/org/bitbucket/inkytonik/kiama/example/oberon0/L0/tests/type.ob:20:5:error: atype3 is already declared
[2]    atype3 : INTEGER;
[2]    ^
[2]src/test/scala/org/bitbucket/inkytonik/kiama/example/oberon0/L0/tests/type.ob:21:13:error: aconst2 is not a type name
[2]    avar2 : aconst2;
[2]            ^
[2]src/test/scala/org/bitbucket/inkytonik/kiama/example/oberon0/L0/tests/type.ob:28:5:error: atype1 cannot be used in an expression
[2]    atype1 := 2;
[2]    ^
[2]src/test/scala/org/bitbucket/inkytonik/kiama/example/oberon0/L0/tests/type.ob:28:5:error: illegal assignment
[2]    atype1 := 2;
[2]    ^
[2]src/test/scala/org/bitbucket/inkytonik/kiama/example/oberon0/L0/tests/type.ob:29:22:error: atype1 cannot be used in an expression
[2]    avar1 := avar1 + atype1;
[2]                     ^
[3]src/test/scala/org/bitbucket/inkytonik/kiama/example/oberon0/L0/tests/type.ob:31:24:error: got BOOLEAN, but expected INTEGER
[3]    avar1 := avar1 DIV avar4;
[3]                       ^
[3]src/test/scala/org/bitbucket/inkytonik/kiama/example/oberon0/L0/tests/type.ob:33:22:error: got BOOLEAN, but expected INTEGER
[3]    avar4 := avar1 = avar4;
[3]                     ^
