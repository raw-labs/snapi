/*
 * Copyright 2024 RAW Labs S.A.
 *
 * Use of this software is governed by the Business Source License
 * included in the file licenses/BSL.txt.
 *
 * As of the Change Date specified in that file, in accordance with
 * the Business Source License, use of this software will be governed
 * by the Apache License, Version 2.0, included in the file
 * licenses/APL.txt.
 */

package com.rawlabs.snapi.frontend.snapi.extensions

import com.rawlabs.snapi.frontend.snapi.extensions.builtin._

object EntryExtensionProvider {

  private val entryExtensions: Array[EntryExtension] = Array(
    new AwsV4SignedRequest,
    new FromStringBinaryEntryExtension,
    new BinaryReadEntry,
    new BinaryBase64Entry,
    new ByteFromEntry,
    new EmptyCollectionEntry,
    new BuildCollectionEntry,
    new FilterCollectionEntry,
    new AvgCollectionEntry,
    new OrderByCollectionEntry,
    new TransformCollectionEntry,
    new DistinctCollectionEntry,
    new CountCollectionEntry,
    new TupleAvgCollectionEntry,
    new MinCollectionEntry,
    new MaxCollectionEntry,
    new SumCollectionEntry,
    new FirstCollectionEntry,
    new FindFirstCollectionEntry,
    new LastCollectionEntry,
    new FindLastCollectionEntry,
    new TakeCollectionEntry,
    new ExplodeCollectionEntry,
    new UnnestCollectionEntry,
    new FromCollectionEntry,
    new GroupCollectionEntry,
    new JoinCollectionEntry,
    new InternalJoinCollectionEntry,
    new EquiJoinCollectionEntry,
    new InternalEquiJoinCollectionEntry,
    new UnionCollectionEntry,
    new ExistsCollectionEntry,
    new ContainsCollectionEntry,
    new ZipCollectionEntry,
    new MkStringCollectionEntry,
    new CsvInferAndReadEntry,
    new CsvReadEntry,
    new CsvInferAndParseEntry,
    new CsvParseEntry,
    new DateBuildEntry,
    new DateFromEpochDayEntry,
    new DateFromTimestampEntry,
    new DateParseEntry,
    new DateNowEntry,
    new DateYearEntry,
    new DateMonthEntry,
    new DateDayEntry,
    new DateSubtractEntry,
    new DateAddIntervalEntry,
    new DateSubtractIntervalEntry,
    new DecimalFromEntry,
    new DecimalRoundEntry,
    new DoubleFromEntry,
    new EnvironmentSecretEntry,
    new EnvironmentScopesEntry,
    new EnvironmentParameterEntry,
    new ErrorBuildEntry,
    new ErrorBuildWithTypeEntry,
    new ErrorGetEntry,
    new FloatFromEntry,
    new FunctionInvokeAfterEntry,
    new HttpReadEntry,
    new HttpUrlEncodeEntry,
    new HttpUrlDecodeEntry,
    new HttpPutEntry,
    new HttpDeleteEntry,
    new HttpGetEntry,
    new HttpHeadEntry,
    new HttpOptionsEntry,
    new HttpPatchEntry,
    new HttpPostEntry,
    new BuildIntervalEntry,
    new IntervalToMillisEntryExtension,
    new IntervalFromMillisEntryExtension,
    new IntervalParseEntryExtension,
    new IntervalYearsEntry,
    new IntervalMonthsEntry,
    new IntervalWeeksEntry,
    new IntervalDaysEntry,
    new IntervalHoursEntry,
    new IntervalMinutesEntry,
    new IntervalSecondsEntry,
    new IntervalMillisEntry,
    new IntFromEntry,
    new IntRangeEntry,
    new InferAndReadJsonEntry,
    new ReadJsonEntry,
    new InferAndParseJsonEntry,
    new ParseJsonEntry,
    new PrintJsonEntry,
    new KryoEncodeEntry,
    new KryoDecodeEntry,
    new EmptyListEntry,
    new BuildListEntry,
    new GetListEntry,
    new FilterListEntry,
    new TransformListEntry,
    new TakeListEntry,
    new SumListEntry,
    new MaxListEntry,
    new MinListEntry,
    new FirstListEntry,
    new FindFirstListEntry,
    new LastListEntry,
    new FindLastListEntry,
    new CountListEntry,
    new ExplodeListEntry,
    new UnnestListEntry,
    new FromListEntry,
    new UnsafeFromListEntry,
    new GroupListEntry,
    new JoinListEntry,
    new EquiJoinListEntry,
    new OrderByListEntry,
    new DistinctListEntry,
    new UnionListEntry,
    new AvgListEntry,
    new ExistsListEntry,
    new ContainsListEntry,
    new ZipListEntry,
    new MkStringListEntry,
    new LocationFromStringEntry,
    new LocationDescribeEntry,
    new LocationLsEntry,
    new LocationLlEntry,
    new LongFromEntry,
    new LongRangeEntry,
    new MathPiEntry,
    new MathRandomEntry,
    new MathPowerEntry,
    new MathAtn2Entry,
    new MathAbsEntry,
    new MathAcosEntry,
    new MathAsinEntry,
    new MathAtanEntry,
    new MathCeilingEntry,
    new MathCosEntry,
    new MathCotEntry,
    new MathDegreesEntry,
    new MathExpEntry,
    new MathLogEntry,
    new MathLog10Entry,
    new MathRadiansEntry,
    new MathSignEntry,
    new MathSinEntry,
    new MathSqrtEntry,
    new MathTanEntry,
    new MathSquareEntry,
    new MathFloorEntry,
    new MySQLInferAndReadEntry,
    new MySQLReadEntry,
    new MySQLInferAndQueryEntry,
    new MySQLQueryEntry,
    new NullableEmptyEntry,
    new NullableBuildEntry,
    new NullableIsNullEntry,
    new NullableUnsafeGetEntry,
    new NullableTransformEntry,
    new FlatMapNullableTryableEntry,
    new OracleInferAndReadEntry,
    new OracleReadEntry,
    new OracleInferAndQueryEntry,
    new OracleQueryEntry,
    new PostgreSQLInferAndReadEntry,
    new PostgreSQLReadEntry,
    new PostgreSQLInferAndQueryEntry,
    new PostgreSQLQueryEntry,
    new RecordBuildEntry,
    new RecordConcatEntry,
    new RecordFieldsEntry,
    new RecordAddFieldEntry,
    new RecordRemoveFieldEntry,
    new RecordGetFieldByIndexEntry,
    new RegexReplaceEntry,
    new RegexMatchesEntry,
    new RegexFirstMatchInEntry,
    new RegexGroupsEntry,
    new S3BuildEntry,
    new ShortFromEntry,
    new SnowflakeInferAndReadEntry,
    new SnowflakeReadEntry,
    new SnowflakeInferAndQueryEntry,
    new SnowflakeQueryEntry,
    new SQLServerInferAndReadEntry,
    new SQLServerReadEntry,
    new SQLServerInferAndQueryEntry,
    new SQLServerQueryEntry,
    new StringFromEntry,
    new StringReadEntry,
    new StringContainsEntry,
    new StringTrimEntry,
    new StringLTrimEntry,
    new StringRTrimEntry,
    new StringReplaceEntry,
    new StringReverseEntry,
    new StringReplicateEntry,
    new StringUpperEntry,
    new StringLowerEntry,
    new StringSplitEntry,
    new StringLengthEntry,
    new StringSubStringEntry,
    new StringCountSubStringEntry,
    new StringStartsWithEntry,
    new StringEmptyEntry,
    new Base64EntryExtension,
    new StringEncodeEntry,
    new StringDecodeEntry,
    new StringLevenshteinDistanceEntry,
    new StringReadLinesEntry,
    new StringCapitalizeEntry,
    new SuccessBuildEntry,
    new MandatoryExpArgsEntry,
    new MandatoryValueArgsEntry,
    new OptionalExpArgsTestEntry,
    new OptionalValueArgsTestEntry,
    new OptionalValueArgSugar,
    new VarValueArgSugarTestEntry,
    new VarExpArgsTestEntry,
    new VarValueArgsTestEntry,
    new VarNullableStringValueTestEntry,
    new VarNullableStringExpTestEntry,
    new StrictArgsTestEntry,
    new StrictArgsColPassThroughTestEntry,
    new StrictArgsColConsumeTestEntry,
    new ByteValueArgTestEntry,
    new ShortValueArgTestEntry,
    new IntValueArgTestEntry,
    new LongValueArgTestEntry,
    new FloatValueArgTestEntry,
    new DoubleValueArgTestEntry,
    new StringValueArgTestEntry,
    new BoolValueArgTestEntry,
    new DateValueArgTestEntry,
    new TimeValueArgTestEntry,
    new TimestampValueArgTestEntry,
    new IntervalValueArgTestEntry,
    new RecordValueArgTestEntry,
    new ListValueArgTestEntry,
    new TimeBuildEntry,
    new TimeParseEntry,
    new TimeNowEntry,
    new TimeHourEntry,
    new TimeMinuteEntry,
    new TimeSecondEntry,
    new TimeMillisEntry,
    new TimeSubtractEntry,
    new TimeAddIntervalEntry,
    new TimeSubtractIntervalEntry,
    new TimestampBuildEntry,
    new TimestampFromDateEntry,
    new TimestampParseEntry,
    new TimestampNowEntry,
    new TimestampRangeEntry,
    new TimestampYearEntry,
    new TimestampMonthEntry,
    new TimestampDayEntry,
    new TimestampHourEntry,
    new TimestampMinuteEntry,
    new TimestampSecondEntry,
    new TimestampMillisEntry,
    new TimestampFromUnixTimestampEntry,
    new TimestampToUnixTimestampEntry,
    new TimestampTimeBucketEntry,
    new TimestampSubtractEntry,
    new TimestampAddIntervalEntry,
    new TimestampSubtractIntervalEntry,
    new TryTransformEntry,
    new TryIsErrorEntry,
    new TryIsSuccessEntry,
    new TryFlatMapEntry,
    new TryUnsafeGetEntry,
    new TypeCastEntry,
    new TypeProtectCastEntry,
    new TypeEmptyEntry,
    new TypeMatchEntry,
    new InferAndReadXmlEntry,
    new ReadXmlEntry,
    new ParseXmlEntry
  )

  def getEntries(name: String): Array[EntryExtension] = {
    entryExtensions.filter(_.packageName == name)
  }

}
